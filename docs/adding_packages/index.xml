<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Adding Packages on</title><link>http://getfox.sh/docs/adding_packages/</link><description>Recent content in Adding Packages on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 06 Oct 2020 08:49:15 +0000</lastBuildDate><atom:link href="http://getfox.sh/docs/adding_packages/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>http://getfox.sh/docs/adding_packages/introduction/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>http://getfox.sh/docs/adding_packages/introduction/</guid><description>This section is designed to show you how to set your package in a way that it can be installed with fox.
ðŸ’¡ The instructions apply no matter if your package is public or private. Introduction # Let&amp;rsquo;s say that you created a useful tool, and you want to share it with others.
For example: you made a bash script that renames files in a folder to a standard format, and you want to share it with your coworkers.</description></item><item><title>Adding a remote</title><link>http://getfox.sh/docs/adding_packages/add-a-remote/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>http://getfox.sh/docs/adding_packages/add-a-remote/</guid><description>This section is designed to show you how to set your package in a way that it can be installed with fox.
ðŸ’¡ There is an official remote with hand-cured packages that you can install right away. You can find it here. If you have a cool package that you want to share with the whole world, feel free to submit a PR, and I&amp;rsquo;ll gladly check it out. How to make my package installable with fox # To install a package, first fox needs to know where to find it.</description></item><item><title>Creating a remote</title><link>http://getfox.sh/docs/adding_packages/create-a-remote/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>http://getfox.sh/docs/adding_packages/create-a-remote/</guid><description>How to create a remote # A remote is just a YAMl file that consists of a list of packages. It has the following format:
packages: - path: &amp;quot;me/hello&amp;quot; # string - GitHub repository with the format OWNER/REPO # this is GitHub's standard format # just look at the URL of any repo (like this one) executableName: &amp;quot;hello&amp;quot; # string - The name you want people to type # when using your tool type: &amp;quot;binary&amp;quot; # string - Either 'binary' for executables or 'script' for # arbitrary scripts (eg.</description></item><item><title>Creating a package</title><link>http://getfox.sh/docs/adding_packages/create-a-package/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>http://getfox.sh/docs/adding_packages/create-a-package/</guid><description>How to create a package # Finally, to make your package installable, all you need it to have a GitHub release (not a draft) for it.
Make sure your repo has a release with attached assets. Right now only binary executables and scripts (Eg. bash scripts) are supported. They can be contained in a zip/tarball or be at the root level. If your package is an executable, make sure your release has the binaries with the appropriate name for the OS and the architecture.</description></item><item><title>Install a public package</title><link>http://getfox.sh/docs/adding_packages/install-a-public-package/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>http://getfox.sh/docs/adding_packages/install-a-public-package/</guid><description>How to install a public package # Incidentally, using the packages list in your local repositories file, you can install packages that are on GitHub but the auth didn&amp;rsquo;t add it to a package manager*. All without needed the package authors to even know that fox exists. As long as their releases follow a pattern that fox can understand (which is the same pattern most package managers use), you should be able to do it (exceptions apply).</description></item></channel></rss>